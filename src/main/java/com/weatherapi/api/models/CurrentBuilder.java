/*
 * WeatherAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.weatherapi.api.models;

public class CurrentBuilder {
    //the instance to build
    private Current current;

    /**
     * Default constructor to initialize the instance
     */
    public CurrentBuilder() {
        current = new Current();
    }

    /**
     * Local time when the real time data was updated in unix time.
     */
    public CurrentBuilder lastUpdatedEpoch(Integer lastUpdatedEpoch) {
        current.setLastUpdatedEpoch(lastUpdatedEpoch);
        return this;
    }

    /**
     * Local time when the real time data was updated.
     */
    public CurrentBuilder lastUpdated(String lastUpdated) {
        current.setLastUpdated(lastUpdated);
        return this;
    }

    /**
     * Temperature in celsius
     */
    public CurrentBuilder tempC(Double tempC) {
        current.setTempC(tempC);
        return this;
    }

    /**
     * Temperature in fahrenheit
     */
    public CurrentBuilder tempF(Double tempF) {
        current.setTempF(tempF);
        return this;
    }

    /**
     * 1 = Yes 0 = No <br />Whether to show day condition icon or night icon
     */
    public CurrentBuilder isDay(Integer isDay) {
        current.setIsDay(isDay);
        return this;
    }

    public CurrentBuilder condition(Condition condition) {
        current.setCondition(condition);
        return this;
    }

    /**
     * Wind speed in miles per hour
     */
    public CurrentBuilder windMph(Double windMph) {
        current.setWindMph(windMph);
        return this;
    }

    /**
     * Wind speed in kilometer per hour
     */
    public CurrentBuilder windKph(Double windKph) {
        current.setWindKph(windKph);
        return this;
    }

    /**
     * Wind direction in degrees
     */
    public CurrentBuilder windDegree(Integer windDegree) {
        current.setWindDegree(windDegree);
        return this;
    }

    /**
     * Wind direction as 16 point compass. e.g.: NSW
     */
    public CurrentBuilder windDir(String windDir) {
        current.setWindDir(windDir);
        return this;
    }

    /**
     * Pressure in millibars
     */
    public CurrentBuilder pressureMb(Double pressureMb) {
        current.setPressureMb(pressureMb);
        return this;
    }

    /**
     * Pressure in inches
     */
    public CurrentBuilder pressureIn(Double pressureIn) {
        current.setPressureIn(pressureIn);
        return this;
    }

    /**
     * Precipitation amount in millimeters
     */
    public CurrentBuilder precipMm(Double precipMm) {
        current.setPrecipMm(precipMm);
        return this;
    }

    /**
     * Precipitation amount in inches
     */
    public CurrentBuilder precipIn(Double precipIn) {
        current.setPrecipIn(precipIn);
        return this;
    }

    /**
     * Humidity as percentage
     */
    public CurrentBuilder humidity(Integer humidity) {
        current.setHumidity(humidity);
        return this;
    }

    /**
     * Cloud cover as percentage
     */
    public CurrentBuilder cloud(Integer cloud) {
        current.setCloud(cloud);
        return this;
    }

    /**
     * Feels like temperature as celcius
     */
    public CurrentBuilder feelslikeC(Double feelslikeC) {
        current.setFeelslikeC(feelslikeC);
        return this;
    }

    /**
     * Feels like temperature as fahrenheit
     */
    public CurrentBuilder feelslikeF(Double feelslikeF) {
        current.setFeelslikeF(feelslikeF);
        return this;
    }

    public CurrentBuilder visKm(Double visKm) {
        current.setVisKm(visKm);
        return this;
    }

    public CurrentBuilder visMiles(Double visMiles) {
        current.setVisMiles(visMiles);
        return this;
    }

    /**
     * UV Index
     */
    public CurrentBuilder uv(Double uv) {
        current.setUv(uv);
        return this;
    }

    /**
     * Wind gust in miles per hour
     */
    public CurrentBuilder gustMph(Double gustMph) {
        current.setGustMph(gustMph);
        return this;
    }

    /**
     * Wind gust in kilometer per hour
     */
    public CurrentBuilder gustKph(Double gustKph) {
        current.setGustKph(gustKph);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Current build() {
        return current;
    }
}